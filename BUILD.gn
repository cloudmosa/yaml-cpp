# Copyright 2019 CloudMosa Inc.
  #

config("public_config") {
  include_dirs = [
    "include/"
  ]
}

component("yaml-cpp")  {
  output_name = "yaml-cpp"

  include_dirs = [
    "include/"
  ]

  public_configs = [
    ":public_config",
  ]

  configs -= [ "//build/config/compiler:no_exceptions" ]
  configs += [ "//build/config/compiler:exceptions" ]

  defines = [
    # "DISABLE_EXCEPTION=0"
  ]

  sources = [
    # sources and private_headers
    "src/binary.cpp",
    "src/collectionstack.h",
    "src/convert.cpp",
    "src/directives.cpp",
    "src/directives.h",
    "src/emit.cpp",
    "src/emitfromevents.cpp",
    "src/emitter.cpp",
    "src/emitterstate.cpp",
    "src/emitterstate.h",
    "src/emitterutils.cpp",
    "src/emitterutils.h",
    "src/exceptions.cpp",
    "src/exp.cpp",
    "src/exp.h",
    "src/indentation.h",
    "src/memory.cpp",
    "src/node_data.cpp",
    "src/node.cpp",
    "src/nodebuilder.cpp",
    "src/nodebuilder.h",
    "src/nodeevents.cpp",
    "src/nodeevents.h",
    "src/null.cpp",
    "src/ostream_wrapper.cpp",
    "src/parse.cpp",
    "src/parser.cpp",
    "src/ptr_vector.h",
    "src/regex_yaml.cpp",
    "src/regex_yaml.h",
    "src/regeximpl.h",
    "src/scanner.cpp",
    "src/scanner.h",
    "src/scanscalar.cpp",
    "src/scanscalar.h",
    "src/scantag.cpp",
    "src/scantag.h",
    "src/scantoken.cpp",
    "src/setting.h",
    "src/simplekey.cpp",
    "src/singledocparser.cpp",
    "src/singledocparser.h",
    "src/stream.cpp",
    "src/stream.h",
    "src/streamcharsource.h",
    "src/stringsource.h",
    "src/tag.cpp",
    "src/tag.h",
    "src/token.h",
    # public_headers
    "include/yaml-cpp/anchor.h",
    "include/yaml-cpp/binary.h",
    "include/yaml-cpp/dll.h",
    "include/yaml-cpp/emitfromevents.h",
    "include/yaml-cpp/emitter.h",
    "include/yaml-cpp/emitterdef.h",
    "include/yaml-cpp/emittermanip.h",
    "include/yaml-cpp/emitterstyle.h",
    "include/yaml-cpp/eventhandler.h",
    "include/yaml-cpp/exceptions.h",
    "include/yaml-cpp/mark.h",
    "include/yaml-cpp/null.h",
    "include/yaml-cpp/ostream_wrapper.h",
    "include/yaml-cpp/parser.h",
    "include/yaml-cpp/stlemitter.h",
    "include/yaml-cpp/traits.h",
    "include/yaml-cpp/yaml.h",
    # contrib_sources
    "src/contrib/graphbuilder.cpp",
    "src/contrib/graphbuilderadapter.cpp",
    # contrib_public_headers
    "include/yaml-cpp/contrib/anchordict.h",
    "include/yaml-cpp/contrib/graphbuilder.h",
    # contrib_private_headers
    "src/contrib/graphbuilderadapter.h"
  ]
}

# vim: sts = 2: sw = 2: